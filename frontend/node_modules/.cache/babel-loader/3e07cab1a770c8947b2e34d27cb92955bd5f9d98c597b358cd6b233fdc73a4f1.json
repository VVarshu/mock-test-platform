{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Desktop\\\\mock-test\\\\mock-test-platform\\\\frontend\\\\src\\\\components\\\\Test.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { getQuestions, submitTest } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Test = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [answers, setAnswers] = useState({});\n  const [timeLeft, setTimeLeft] = useState(900); // 15 minutes in seconds\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(true);\n\n  // Fetch 10 random questions from the server when the component mounts\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        setLoading(true);\n        const response = await getQuestions();\n        if (response && response.length > 0) {\n          setQuestions(response);\n        } else {\n          setError('No questions available');\n        }\n      } catch (err) {\n        console.error('Failed to fetch questions:', err);\n        setError('Failed to fetch questions');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchQuestions();\n  }, []);\n\n  // Memoize handleSubmit so that it doesn't trigger re-renders unnecessarily\n  const handleSubmit = useCallback(async () => {\n    const testResult = {\n      questions,\n      answers\n    };\n    try {\n      await submitTest(testResult);\n      alert('Test submitted successfully!'); // Show alert on success\n    } catch (error) {\n      console.error('Failed to submit test:', error);\n      setError('Failed to submit test');\n    }\n  }, [questions, answers]);\n\n  // Timer logic\n  useEffect(() => {\n    if (timeLeft > 0) {\n      const timerId = setInterval(() => {\n        setTimeLeft(prev => prev - 1);\n      }, 1000);\n      return () => clearInterval(timerId);\n    } else {\n      handleSubmit();\n    }\n  }, [timeLeft, handleSubmit]);\n\n  // Handle answer selection\n  const handleAnswerChange = (questionId, selectedOption) => {\n    setAnswers({\n      ...answers,\n      [questionId]: selectedOption\n    });\n  };\n\n  // Convert remaining time to minutes and seconds for display\n  const formatTime = seconds => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds < 10 ? '0' : ''}${remainingSeconds}`;\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading questions...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer\",\n      children: [\"Time left: \", formatTime(timeLeft)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), questions.length > 0 ? questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [index + 1, \". \", question.text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: `question-${question.id}`,\n            value: \"1\",\n            onChange: () => handleAnswerChange(question.id, 1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 33\n          }, this), question.option1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: `question-${question.id}`,\n            value: \"2\",\n            onChange: () => handleAnswerChange(question.id, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 33\n          }, this), question.option2]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: `question-${question.id}`,\n            value: \"3\",\n            onChange: () => handleAnswerChange(question.id, 3)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 33\n          }, this), question.option3]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: `question-${question.id}`,\n            value: \"4\",\n            onChange: () => handleAnswerChange(question.id, 4)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 33\n          }, this), question.option4]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 25\n      }, this)]\n    }, question.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No questions found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Submit Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n};\n_s(Test, \"I2nnd98XDQu2TGmSfdWUCreskQw=\");\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","getQuestions","submitTest","jsxDEV","_jsxDEV","Test","_s","questions","setQuestions","answers","setAnswers","timeLeft","setTimeLeft","error","setError","loading","setLoading","fetchQuestions","response","length","err","console","handleSubmit","testResult","alert","timerId","setInterval","prev","clearInterval","handleAnswerChange","questionId","selectedOption","formatTime","seconds","minutes","Math","floor","remainingSeconds","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","question","index","text","type","name","id","value","onChange","option1","option2","option3","option4","onClick","_c","$RefreshReg$"],"sources":["C:/Users/HP/OneDrive/Desktop/mock-test/mock-test-platform/frontend/src/components/Test.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\r\nimport { getQuestions, submitTest } from '../api';\r\n\r\nconst Test = () => {\r\n    const [questions, setQuestions] = useState([]);\r\n    const [answers, setAnswers] = useState({});\r\n    const [timeLeft, setTimeLeft] = useState(900);  // 15 minutes in seconds\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    // Fetch 10 random questions from the server when the component mounts\r\n    useEffect(() => {\r\n        const fetchQuestions = async () => {\r\n            try {\r\n                setLoading(true);\r\n                const response = await getQuestions();\r\n                if (response && response.length > 0) {\r\n                    setQuestions(response);\r\n                } else {\r\n                    setError('No questions available');\r\n                }\r\n            } catch (err) {\r\n                console.error('Failed to fetch questions:', err);\r\n                setError('Failed to fetch questions');\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchQuestions();\r\n    }, []);\r\n\r\n    // Memoize handleSubmit so that it doesn't trigger re-renders unnecessarily\r\n    const handleSubmit = useCallback(async () => {\r\n        const testResult = {\r\n            questions,\r\n            answers,\r\n        };\r\n\r\n        try {\r\n            await submitTest(testResult);\r\n            alert('Test submitted successfully!');  // Show alert on success\r\n        } catch (error) {\r\n            console.error('Failed to submit test:', error);\r\n            setError('Failed to submit test');\r\n        }\r\n    }, [questions, answers]);\r\n\r\n    // Timer logic\r\n    useEffect(() => {\r\n        if (timeLeft > 0) {\r\n            const timerId = setInterval(() => {\r\n                setTimeLeft((prev) => prev - 1);\r\n            }, 1000);\r\n\r\n            return () => clearInterval(timerId);\r\n        } else {\r\n            handleSubmit();\r\n        }\r\n    }, [timeLeft, handleSubmit]);\r\n\r\n    // Handle answer selection\r\n    const handleAnswerChange = (questionId, selectedOption) => {\r\n        setAnswers({\r\n            ...answers,\r\n            [questionId]: selectedOption,\r\n        });\r\n    };\r\n\r\n    // Convert remaining time to minutes and seconds for display\r\n    const formatTime = (seconds) => {\r\n        const minutes = Math.floor(seconds / 60);\r\n        const remainingSeconds = seconds % 60;\r\n        return `${minutes}:${remainingSeconds < 10 ? '0' : ''}${remainingSeconds}`;\r\n    };\r\n\r\n    if (loading) {\r\n        return <div>Loading questions...</div>;\r\n    }\r\n\r\n    if (error) {\r\n        return <div>{error}</div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"timer\">Time left: {formatTime(timeLeft)}</div>\r\n\r\n            {questions.length > 0 ? (\r\n                questions.map((question, index) => (\r\n                    <div key={question.id}>\r\n                        <h4>{index + 1}. {question.text}</h4>\r\n                        <div>\r\n                            <label>\r\n                                <input\r\n                                    type=\"radio\"\r\n                                    name={`question-${question.id}`}\r\n                                    value=\"1\"\r\n                                    onChange={() => handleAnswerChange(question.id, 1)}\r\n                                />\r\n                                {question.option1}\r\n                            </label>\r\n                        </div>\r\n                        <div>\r\n                            <label>\r\n                                <input\r\n                                    type=\"radio\"\r\n                                    name={`question-${question.id}`}\r\n                                    value=\"2\"\r\n                                    onChange={() => handleAnswerChange(question.id, 2)}\r\n                                />\r\n                                {question.option2}\r\n                            </label>\r\n                        </div>\r\n                        <div>\r\n                            <label>\r\n                                <input\r\n                                    type=\"radio\"\r\n                                    name={`question-${question.id}`}\r\n                                    value=\"3\"\r\n                                    onChange={() => handleAnswerChange(question.id, 3)}\r\n                                />\r\n                                {question.option3}\r\n                            </label>\r\n                        </div>\r\n                        <div>\r\n                            <label>\r\n                                <input\r\n                                    type=\"radio\"\r\n                                    name={`question-${question.id}`}\r\n                                    value=\"4\"\r\n                                    onChange={() => handleAnswerChange(question.id, 4)}\r\n                                />\r\n                                {question.option4}\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            ) : (\r\n                <div>No questions found</div>\r\n            )}\r\n\r\n            <button onClick={handleSubmit}>Submit Test</button> {/* Submit button */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Test;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}