{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Desktop\\\\mock-test\\\\mock-test-platform\\\\frontend\\\\src\\\\components\\\\Test.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext, useCallback } from 'react';\nimport { getQuestions, submitTest } from '../api'; // Use submitTest from api\nimport { useNavigate } from 'react-router-dom';\nimport { UserContext } from '../context/UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Test = () => {\n  _s();\n  const {\n    currentUser\n  } = useContext(UserContext);\n  const [questions, setQuestions] = useState([]);\n  const [userAnswers, setUserAnswers] = useState({});\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [timer, setTimer] = useState(900);\n  const [score, setScore] = useState(null);\n  const navigate = useNavigate();\n  const handleSubmitScore = useCallback(async () => {\n    const totalQuestions = questions.length;\n    const correctAnswers = questions.filter(question => question.correctAnswer === userAnswers[question.id]).length;\n    const calculatedScore = Math.round(correctAnswers / totalQuestions * 100);\n    const userId = parseInt(currentUser.id, 10);\n    try {\n      const result = await submitTest({\n        userId,\n        score: calculatedScore\n      }); // Call submitTest\n      console.log(result);\n      setScore(calculatedScore);\n      navigate('/results');\n    } catch (error) {\n      console.error('Error submitting score:', error);\n    }\n  }, [questions, userAnswers, currentUser, navigate]);\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const response = await getQuestions();\n        if (response && response.questions && response.questions.length > 0) {\n          setQuestions(response.questions);\n        } else {\n          setError('No questions available');\n        }\n      } catch (err) {\n        console.error('Failed to fetch questions:', err);\n        setError('Failed to fetch questions');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchQuestions();\n  }, []);\n  useEffect(() => {\n    const countdown = setInterval(() => {\n      setTimer(prevTimer => {\n        if (prevTimer <= 1) {\n          clearInterval(countdown);\n          handleSubmitScore();\n          return 0;\n        }\n        return prevTimer - 1;\n      });\n    }, 1000);\n    return () => clearInterval(countdown);\n  }, [handleSubmitScore]);\n  const handleAnswerChange = (questionId, answer) => {\n    setUserAnswers(prevAnswers => ({\n      ...prevAnswers,\n      [questionId]: answer\n    }));\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading questions...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Time Left: \", Math.floor(timer / 60), \":\", String(timer % 60).padStart(2, '0')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: question.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: `question${index}`,\n          value: \"1\",\n          onChange: () => handleAnswerChange(question.id, '1')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this), \" \", question.option1, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 46\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: `question${index}`,\n          value: \"2\",\n          onChange: () => handleAnswerChange(question.id, '2')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this), \" \", question.option2, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 46\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: `question${index}`,\n          value: \"3\",\n          onChange: () => handleAnswerChange(question.id, '3')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }, this), \" \", question.option3, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 46\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: `question${index}`,\n          value: \"4\",\n          onChange: () => handleAnswerChange(question.id, '4')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }, this), \" \", question.option4, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 46\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this)]\n    }, question.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmitScore,\n      children: \"Submit Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), score !== null && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Your Score: \", score, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 32\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n};\n_s(Test, \"7EXRDCeN7XL7Hy9SAVrm2aQWNag=\", false, function () {\n  return [useNavigate];\n});\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useEffect","useState","useContext","useCallback","getQuestions","submitTest","useNavigate","UserContext","jsxDEV","_jsxDEV","Test","_s","currentUser","questions","setQuestions","userAnswers","setUserAnswers","error","setError","loading","setLoading","timer","setTimer","score","setScore","navigate","handleSubmitScore","totalQuestions","length","correctAnswers","filter","question","correctAnswer","id","calculatedScore","Math","round","userId","parseInt","result","console","log","fetchQuestions","response","err","countdown","setInterval","prevTimer","clearInterval","handleAnswerChange","questionId","answer","prevAnswers","children","fileName","_jsxFileName","lineNumber","columnNumber","floor","String","padStart","map","index","text","type","name","value","onChange","option1","option2","option3","option4","onClick","_c","$RefreshReg$"],"sources":["C:/Users/HP/OneDrive/Desktop/mock-test/mock-test-platform/frontend/src/components/Test.js"],"sourcesContent":["import React, { useEffect, useState, useContext, useCallback } from 'react';\r\nimport { getQuestions, submitTest } from '../api'; // Use submitTest from api\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { UserContext } from '../context/UserContext';\r\n\r\nconst Test = () => {\r\n    const { currentUser } = useContext(UserContext);\r\n    const [questions, setQuestions] = useState([]);\r\n    const [userAnswers, setUserAnswers] = useState({});\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(true);\r\n    const [timer, setTimer] = useState(900);\r\n    const [score, setScore] = useState(null);\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmitScore = useCallback(async () => {\r\n        const totalQuestions = questions.length;\r\n        const correctAnswers = questions.filter((question) => \r\n            question.correctAnswer === userAnswers[question.id]\r\n        ).length; \r\n        const calculatedScore = Math.round((correctAnswers / totalQuestions) * 100);\r\n\r\n        const userId = parseInt(currentUser.id, 10);\r\n\r\n        try {\r\n            const result = await submitTest({ userId, score: calculatedScore }); // Call submitTest\r\n            console.log(result);\r\n\r\n            setScore(calculatedScore);\r\n            navigate('/results'); \r\n        } catch (error) {\r\n            console.error('Error submitting score:', error);\r\n        }\r\n    }, [questions, userAnswers, currentUser, navigate]);\r\n\r\n    useEffect(() => {\r\n        const fetchQuestions = async () => {\r\n            try {\r\n                const response = await getQuestions();\r\n                if (response && response.questions && response.questions.length > 0) {\r\n                    setQuestions(response.questions);\r\n                } else {\r\n                    setError('No questions available');\r\n                }\r\n            } catch (err) {\r\n                console.error('Failed to fetch questions:', err);\r\n                setError('Failed to fetch questions');\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchQuestions();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const countdown = setInterval(() => {\r\n            setTimer((prevTimer) => {\r\n                if (prevTimer <= 1) {\r\n                    clearInterval(countdown);\r\n                    handleSubmitScore();\r\n                    return 0;\r\n                }\r\n                return prevTimer - 1;\r\n            });\r\n        }, 1000);\r\n\r\n        return () => clearInterval(countdown);\r\n    }, [handleSubmitScore]);\r\n\r\n    const handleAnswerChange = (questionId, answer) => {\r\n        setUserAnswers((prevAnswers) => ({\r\n            ...prevAnswers,\r\n            [questionId]: answer,\r\n        }));\r\n    };\r\n\r\n    if (loading) {\r\n        return <div>Loading questions...</div>;\r\n    }\r\n\r\n    if (error) {\r\n        return <div>{error}</div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Time Left: {Math.floor(timer / 60)}:{String(timer % 60).padStart(2, '0')}</h2>\r\n            {questions.map((question, index) => (\r\n                <div key={question.id}>\r\n                    <h4>{question.text}</h4>\r\n                    <div>\r\n                        <input \r\n                            type=\"radio\" \r\n                            name={`question${index}`} \r\n                            value=\"1\" \r\n                            onChange={() => handleAnswerChange(question.id, '1')} \r\n                        /> {question.option1}<br />\r\n                        <input \r\n                            type=\"radio\" \r\n                            name={`question${index}`} \r\n                            value=\"2\" \r\n                            onChange={() => handleAnswerChange(question.id, '2')} \r\n                        /> {question.option2}<br />\r\n                        <input \r\n                            type=\"radio\" \r\n                            name={`question${index}`} \r\n                            value=\"3\" \r\n                            onChange={() => handleAnswerChange(question.id, '3')} \r\n                        /> {question.option3}<br />\r\n                        <input \r\n                            type=\"radio\" \r\n                            name={`question${index}`} \r\n                            value=\"4\" \r\n                            onChange={() => handleAnswerChange(question.id, '4')} \r\n                        /> {question.option4}<br />\r\n                    </div>\r\n                </div>\r\n            ))}\r\n            <button onClick={handleSubmitScore}>Submit Test</button>\r\n            {score !== null && <h3>Your Score: {score}%</h3>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Test;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}