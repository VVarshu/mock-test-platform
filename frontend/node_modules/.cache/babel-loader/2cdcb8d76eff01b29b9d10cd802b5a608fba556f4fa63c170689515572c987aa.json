{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Desktop\\\\mock-test\\\\mock-test-platform\\\\frontend\\\\src\\\\components\\\\Test.js\",\n  _s = $RefreshSig$();\n// src/components/Test.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Test = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [timer, setTimer] = useState(15); // Timer in seconds\n  const [isRunning, setIsRunning] = useState(false); // Timer state\n\n  useEffect(() => {\n    // Fetch questions from the backend\n    const fetchQuestions = async () => {\n      const response = await axios.get('http://localhost:5000/api/questions');\n      setQuestions(response.data);\n      startTimer(15); // Start with a default timer of 15 seconds\n    };\n    fetchQuestions();\n  }, []);\n  const startTimer = duration => {\n    setTimer(duration);\n    setIsRunning(true);\n    const interval = setInterval(() => {\n      setTimer(prevTimer => {\n        if (prevTimer <= 1) {\n          clearInterval(interval);\n          setIsRunning(false);\n          // Here you can call a function to submit the score\n          return 0;\n        }\n        return prevTimer - 1;\n      });\n    }, 1000);\n  };\n  const resetTimer = duration => {\n    setIsRunning(false); // Stop the current timer\n    clearInterval(); // Clear the interval if running\n    startTimer(duration); // Start a new timer with the provided duration\n  };\n  const handleNextQuestion = userAnswer => {\n    if (userAnswer === questions[currentQuestionIndex].correct_option) {\n      setScore(score + 1);\n    }\n    const nextIndex = currentQuestionIndex + 1;\n    if (nextIndex < questions.length) {\n      setCurrentQuestionIndex(nextIndex);\n      resetTimer(15); // Reset the timer for the next question\n    } else {\n      // Submit score or show results\n      console.log(`Your score: ${score}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Time Left: \", timer, \" seconds\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), questions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: questions[currentQuestionIndex].text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleNextQuestion(1),\n        children: [\" \", questions[currentQuestionIndex].option1, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleNextQuestion(2),\n        children: [\" \", questions[currentQuestionIndex].option2, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleNextQuestion(3),\n        children: [\" \", questions[currentQuestionIndex].option3, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleNextQuestion(4),\n        children: [\" \", questions[currentQuestionIndex].option4, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(Test, \"DgsOV8u4a5tJEaagyU2TGIjQNJU=\");\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Test","_s","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","score","setScore","timer","setTimer","isRunning","setIsRunning","fetchQuestions","response","get","data","startTimer","duration","interval","setInterval","prevTimer","clearInterval","resetTimer","handleNextQuestion","userAnswer","correct_option","nextIndex","length","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","text","onClick","option1","option2","option3","option4","_c","$RefreshReg$"],"sources":["C:/Users/HP/OneDrive/Desktop/mock-test/mock-test-platform/frontend/src/components/Test.js"],"sourcesContent":["// src/components/Test.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Test = () => {\r\n    const [questions, setQuestions] = useState([]);\r\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n    const [score, setScore] = useState(0);\r\n    const [timer, setTimer] = useState(15); // Timer in seconds\r\n    const [isRunning, setIsRunning] = useState(false); // Timer state\r\n\r\n    useEffect(() => {\r\n        // Fetch questions from the backend\r\n        const fetchQuestions = async () => {\r\n            const response = await axios.get('http://localhost:5000/api/questions');\r\n            setQuestions(response.data);\r\n            startTimer(15); // Start with a default timer of 15 seconds\r\n        };\r\n\r\n        fetchQuestions();\r\n    }, []);\r\n\r\n    const startTimer = (duration) => {\r\n        setTimer(duration);\r\n        setIsRunning(true);\r\n        const interval = setInterval(() => {\r\n            setTimer((prevTimer) => {\r\n                if (prevTimer <= 1) {\r\n                    clearInterval(interval);\r\n                    setIsRunning(false);\r\n                    // Here you can call a function to submit the score\r\n                    return 0;\r\n                }\r\n                return prevTimer - 1;\r\n            });\r\n        }, 1000);\r\n    };\r\n\r\n    const resetTimer = (duration) => {\r\n        setIsRunning(false); // Stop the current timer\r\n        clearInterval(); // Clear the interval if running\r\n        startTimer(duration); // Start a new timer with the provided duration\r\n    };\r\n\r\n    const handleNextQuestion = (userAnswer) => {\r\n        if (userAnswer === questions[currentQuestionIndex].correct_option) {\r\n            setScore(score + 1);\r\n        }\r\n        const nextIndex = currentQuestionIndex + 1;\r\n        if (nextIndex < questions.length) {\r\n            setCurrentQuestionIndex(nextIndex);\r\n            resetTimer(15); // Reset the timer for the next question\r\n        } else {\r\n            // Submit score or show results\r\n            console.log(`Your score: ${score}`);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Test</h2>\r\n            <h3>Time Left: {timer} seconds</h3>\r\n            {questions.length > 0 && (\r\n                <div>\r\n                    <h4>{questions[currentQuestionIndex].text}</h4>\r\n                    <button onClick={() => handleNextQuestion(1)}> {questions[currentQuestionIndex].option1} </button>\r\n                    <button onClick={() => handleNextQuestion(2)}> {questions[currentQuestionIndex].option2} </button>\r\n                    <button onClick={() => handleNextQuestion(3)}> {questions[currentQuestionIndex].option3} </button>\r\n                    <button onClick={() => handleNextQuestion(4)}> {questions[currentQuestionIndex].option4} </button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Test;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}