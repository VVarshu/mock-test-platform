{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Desktop\\\\mock-test\\\\mock-test-platform\\\\frontend\\\\src\\\\components\\\\Test.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getQuestions } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Score = require('../models/Score'); // Import the Score model\nconst Feedback = require('../models/Feedback');\nconst Test = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [timer, setTimer] = useState(900); // 15 minutes in seconds\n\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const response = await getQuestions();\n        if (response && response.questions && response.questions.length > 0) {\n          setQuestions(response.questions);\n        } else {\n          setError('No questions available');\n        }\n      } catch (err) {\n        console.error('Failed to fetch questions:', err);\n        setError('Failed to fetch questions');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchQuestions();\n  }, []);\n  useEffect(() => {\n    // Timer functionality\n    const countdown = setInterval(() => {\n      setTimer(prevTimer => {\n        if (prevTimer <= 1) {\n          clearInterval(countdown);\n          // Here you could handle what happens when time runs out, e.g., submit answers\n          return 0;\n        }\n        return prevTimer - 1;\n      });\n    }, 1000);\n    return () => clearInterval(countdown);\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading questions...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Time Left: \", Math.floor(timer / 60), \":\", String(timer % 60).padStart(2, '0')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: question.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: `question${index}`,\n          value: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this), \" \", question.option1, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 102\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: `question${index}`,\n          value: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this), \" \", question.option2, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 102\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: `question${index}`,\n          value: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this), \" \", question.option3, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 102\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: `question${index}`,\n          value: \"4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this), \" \", question.option4, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 102\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this)]\n    }, question.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_s(Test, \"LAFLSbKwY7R3qsCPrSfO91lmTMg=\");\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useEffect","useState","getQuestions","jsxDEV","_jsxDEV","Score","require","Feedback","Test","_s","questions","setQuestions","error","setError","loading","setLoading","timer","setTimer","fetchQuestions","response","length","err","console","countdown","setInterval","prevTimer","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","Math","floor","String","padStart","map","question","index","text","type","name","value","option1","option2","option3","option4","id","_c","$RefreshReg$"],"sources":["C:/Users/HP/OneDrive/Desktop/mock-test/mock-test-platform/frontend/src/components/Test.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getQuestions } from '../api';\r\nconst Score = require('../models/Score'); // Import the Score model\r\nconst Feedback = require('../models/Feedback');\r\n\r\nconst Test = () => {\r\n    const [questions, setQuestions] = useState([]);\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(true);\r\n    const [timer, setTimer] = useState(900); // 15 minutes in seconds\r\n\r\n    useEffect(() => {\r\n        const fetchQuestions = async () => {\r\n            try {\r\n                const response = await getQuestions();\r\n                if (response && response.questions && response.questions.length > 0) {\r\n                    setQuestions(response.questions);\r\n                } else {\r\n                    setError('No questions available');\r\n                }\r\n            } catch (err) {\r\n                console.error('Failed to fetch questions:', err);\r\n                setError('Failed to fetch questions');\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchQuestions();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // Timer functionality\r\n        const countdown = setInterval(() => {\r\n            setTimer((prevTimer) => {\r\n                if (prevTimer <= 1) {\r\n                    clearInterval(countdown);\r\n                    // Here you could handle what happens when time runs out, e.g., submit answers\r\n                    return 0;\r\n                }\r\n                return prevTimer - 1;\r\n            });\r\n        }, 1000);\r\n\r\n        return () => clearInterval(countdown);\r\n    }, []);\r\n\r\n    if (loading) {\r\n        return <div>Loading questions...</div>;\r\n    }\r\n\r\n    if (error) {\r\n        return <div>{error}</div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Time Left: {Math.floor(timer / 60)}:{String(timer % 60).padStart(2, '0')}</h2>\r\n            {questions.map((question, index) => (\r\n                <div key={question.id}>\r\n                    <h4>{question.text}</h4>\r\n                    <div>\r\n                        <input type=\"radio\" name={`question${index}`} value=\"1\" /> {question.option1}<br />\r\n                        <input type=\"radio\" name={`question${index}`} value=\"2\" /> {question.option2}<br />\r\n                        <input type=\"radio\" name={`question${index}`} value=\"3\" /> {question.option3}<br />\r\n                        <input type=\"radio\" name={`question${index}`} value=\"4\" /> {question.option4}<br />\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Test;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}