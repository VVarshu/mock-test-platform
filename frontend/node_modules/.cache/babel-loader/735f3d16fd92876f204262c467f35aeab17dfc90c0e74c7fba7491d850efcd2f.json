{"ast":null,"code":"import axios from'axios';// Set base API URL\nconst API_URL='http://localhost:5000/api';// Make sure this matches your server URL\n// Register a new user\nexport const registerUser=async userData=>{try{const response=await axios.post(`${API_URL}/auth/register`,userData);// Adjusted URL\nreturn response.data;// Return the response data\n}catch(error){console.error('Registration error:',error.response?error.response.data:error.message);// Log error details\nthrow error;// Re-throw the error to handle it in the component\n}};// Login user\nexport const loginUser=async credentials=>{try{const response=await axios.post(`${API_URL}/auth/login`,credentials);// Adjusted URL\nreturn response.data;// Return the JWT token or user data\n}catch(error){console.error('Login error:',error.response?error.response.data:error.message);// Log error details\nthrow error;// Re-throw the error for handling in the frontend\n}};// Get random questions for the test\nexport const getQuestions=async()=>{try{const response=await axios.get(`${API_URL}/questions/random`);// Correct endpoint\nconsole.log('Fetched questions:',response.data);// Log fetched questions for debugging\nreturn response.data;// Return questions data\n}catch(error){console.error('Error fetching questions:',error.message);// Log error message\nthrow error;// Re-throw the error for further handling\n}};export const submitTest=async data=>{try{const response=await axios.post(`${API_URL}/test/submit`,data);// Correct endpoint\nreturn response.data;// Return the success response\n}catch(error){// Improved error logging for better debugging\nif(error.response){// Server responded with a status other than 200 range\nconsole.error('Error submitting test:',error.response.data);console.error('Status code:',error.response.status);}else if(error.request){// Request was made but no response was received\nconsole.error('Error submitting test: No response received:',error.request);}else{// Something happened in setting up the request\nconsole.error('Error submitting test:',error.message);}throw error;// Re-throw the error for frontend handling\n}};","map":{"version":3,"names":["axios","API_URL","registerUser","userData","response","post","data","error","console","message","loginUser","credentials","getQuestions","get","log","submitTest","status","request"],"sources":["C:/Users/HP/OneDrive/Desktop/mock-test/mock-test-platform/frontend/src/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Set base API URL\r\nconst API_URL = 'http://localhost:5000/api'; // Make sure this matches your server URL\r\n\r\n// Register a new user\r\nexport const registerUser = async (userData) => {\r\n    try {\r\n        const response = await axios.post(`${API_URL}/auth/register`, userData); // Adjusted URL\r\n        return response.data; // Return the response data\r\n    } catch (error) {\r\n        console.error('Registration error:', error.response ? error.response.data : error.message); // Log error details\r\n        throw error; // Re-throw the error to handle it in the component\r\n    }\r\n};\r\n\r\n// Login user\r\nexport const loginUser = async (credentials) => {\r\n    try {\r\n        const response = await axios.post(`${API_URL}/auth/login`, credentials); // Adjusted URL\r\n        return response.data; // Return the JWT token or user data\r\n    } catch (error) {\r\n        console.error('Login error:', error.response ? error.response.data : error.message); // Log error details\r\n        throw error; // Re-throw the error for handling in the frontend\r\n    }\r\n};\r\n\r\n// Get random questions for the test\r\nexport const getQuestions = async () => {\r\n    try {\r\n        const response = await axios.get(`${API_URL}/questions/random`); // Correct endpoint\r\n        console.log('Fetched questions:', response.data); // Log fetched questions for debugging\r\n        return response.data; // Return questions data\r\n    } catch (error) {\r\n        console.error('Error fetching questions:', error.message); // Log error message\r\n        throw error; // Re-throw the error for further handling\r\n    }\r\n};\r\n\r\n\r\n\r\nexport const submitTest = async (data) => {\r\n    try {\r\n        const response = await axios.post(`${API_URL}/test/submit`, data);// Correct endpoint\r\n        return response.data; // Return the success response\r\n    } catch (error) {\r\n        // Improved error logging for better debugging\r\n        if (error.response) {\r\n            // Server responded with a status other than 200 range\r\n            console.error('Error submitting test:', error.response.data);\r\n            console.error('Status code:', error.response.status);\r\n        } else if (error.request) {\r\n            // Request was made but no response was received\r\n            console.error('Error submitting test: No response received:', error.request);\r\n        } else {\r\n            // Something happened in setting up the request\r\n            console.error('Error submitting test:', error.message);\r\n        }\r\n        throw error; // Re-throw the error for frontend handling\r\n    }\r\n};\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB;AACA,KAAM,CAAAC,OAAO,CAAG,2BAA2B,CAAE;AAE7C;AACA,MAAO,MAAM,CAAAC,YAAY,CAAG,KAAO,CAAAC,QAAQ,EAAK,CAC5C,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,OAAO,gBAAgB,CAAEE,QAAQ,CAAC,CAAE;AACzE,MAAO,CAAAC,QAAQ,CAACE,IAAI,CAAE;AAC1B,CAAE,MAAOC,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,qBAAqB,CAAEA,KAAK,CAACH,QAAQ,CAAGG,KAAK,CAACH,QAAQ,CAACE,IAAI,CAAGC,KAAK,CAACE,OAAO,CAAC,CAAE;AAC5F,KAAM,CAAAF,KAAK,CAAE;AACjB,CACJ,CAAC,CAED;AACA,MAAO,MAAM,CAAAG,SAAS,CAAG,KAAO,CAAAC,WAAW,EAAK,CAC5C,GAAI,CACA,KAAM,CAAAP,QAAQ,CAAG,KAAM,CAAAJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,OAAO,aAAa,CAAEU,WAAW,CAAC,CAAE;AACzE,MAAO,CAAAP,QAAQ,CAACE,IAAI,CAAE;AAC1B,CAAE,MAAOC,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,cAAc,CAAEA,KAAK,CAACH,QAAQ,CAAGG,KAAK,CAACH,QAAQ,CAACE,IAAI,CAAGC,KAAK,CAACE,OAAO,CAAC,CAAE;AACrF,KAAM,CAAAF,KAAK,CAAE;AACjB,CACJ,CAAC,CAED;AACA,MAAO,MAAM,CAAAK,YAAY,CAAG,KAAAA,CAAA,GAAY,CACpC,GAAI,CACA,KAAM,CAAAR,QAAQ,CAAG,KAAM,CAAAJ,KAAK,CAACa,GAAG,CAAC,GAAGZ,OAAO,mBAAmB,CAAC,CAAE;AACjEO,OAAO,CAACM,GAAG,CAAC,oBAAoB,CAAEV,QAAQ,CAACE,IAAI,CAAC,CAAE;AAClD,MAAO,CAAAF,QAAQ,CAACE,IAAI,CAAE;AAC1B,CAAE,MAAOC,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,2BAA2B,CAAEA,KAAK,CAACE,OAAO,CAAC,CAAE;AAC3D,KAAM,CAAAF,KAAK,CAAE;AACjB,CACJ,CAAC,CAID,MAAO,MAAM,CAAAQ,UAAU,CAAG,KAAO,CAAAT,IAAI,EAAK,CACtC,GAAI,CACA,KAAM,CAAAF,QAAQ,CAAG,KAAM,CAAAJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,OAAO,cAAc,CAAEK,IAAI,CAAC,CAAC;AAClE,MAAO,CAAAF,QAAQ,CAACE,IAAI,CAAE;AAC1B,CAAE,MAAOC,KAAK,CAAE,CACZ;AACA,GAAIA,KAAK,CAACH,QAAQ,CAAE,CAChB;AACAI,OAAO,CAACD,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAACH,QAAQ,CAACE,IAAI,CAAC,CAC5DE,OAAO,CAACD,KAAK,CAAC,cAAc,CAAEA,KAAK,CAACH,QAAQ,CAACY,MAAM,CAAC,CACxD,CAAC,IAAM,IAAIT,KAAK,CAACU,OAAO,CAAE,CACtB;AACAT,OAAO,CAACD,KAAK,CAAC,8CAA8C,CAAEA,KAAK,CAACU,OAAO,CAAC,CAChF,CAAC,IAAM,CACH;AACAT,OAAO,CAACD,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAACE,OAAO,CAAC,CAC1D,CACA,KAAM,CAAAF,KAAK,CAAE;AACjB,CACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}