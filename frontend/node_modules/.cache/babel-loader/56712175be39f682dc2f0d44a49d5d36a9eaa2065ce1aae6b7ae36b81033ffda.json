{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Desktop\\\\mock-test\\\\mock-test-platform\\\\frontend\\\\src\\\\components\\\\Score.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { submitTest } from '../api'; // Import the submitTest function\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Score = () => {\n  _s();\n  const location = useLocation();\n  const {\n    score,\n    userId\n  } = location.state || {};\n  const [feedback, setFeedback] = useState('');\n  const [error, setError] = useState('');\n  const handleSubmitFeedback = async () => {\n    try {\n      await submitTest({\n        userId,\n        score,\n        feedback\n      });\n      alert('Feedback submitted successfully!');\n    } catch (err) {\n      console.error('Failed to submit feedback:', err);\n      setError('Failed to submit feedback');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Your Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Provide your feedback...\",\n      value: feedback,\n      onChange: e => setFeedback(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmitFeedback,\n      children: \"Submit Feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(Score, \"x3Ztrpj/3TaXZ0ijWqGxRX2EaMQ=\", false, function () {\n  return [useLocation];\n});\n_c = Score;\nexport default Score;\nvar _c;\n$RefreshReg$(_c, \"Score\");","map":{"version":3,"names":["React","useState","useLocation","submitTest","jsxDEV","_jsxDEV","Score","_s","location","score","userId","state","feedback","setFeedback","error","setError","handleSubmitFeedback","alert","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/HP/OneDrive/Desktop/mock-test/mock-test-platform/frontend/src/components/Score.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { submitTest } from '../api'; // Import the submitTest function\r\n\r\nconst Score = () => {\r\n    const location = useLocation();\r\n    const { score, userId } = location.state || {};\r\n    const [feedback, setFeedback] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    const handleSubmitFeedback = async () => {\r\n        try {\r\n            await submitTest({ userId, score, feedback });\r\n            alert('Feedback submitted successfully!');\r\n        } catch (err) {\r\n            console.error('Failed to submit feedback:', err);\r\n            setError('Failed to submit feedback');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h3>Your Score: {score}</h3>\r\n            <textarea \r\n                placeholder=\"Provide your feedback...\" \r\n                value={feedback} \r\n                onChange={(e) => setFeedback(e.target.value)} \r\n            />\r\n            <button onClick={handleSubmitFeedback}>Submit Feedback</button>\r\n            {error && <div>{error}</div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Score;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,UAAU,QAAQ,QAAQ,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEO,KAAK;IAAEC;EAAO,CAAC,GAAGF,QAAQ,CAACG,KAAK,IAAI,CAAC,CAAC;EAC9C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMe,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI;MACA,MAAMb,UAAU,CAAC;QAAEO,MAAM;QAAED,KAAK;QAAEG;MAAS,CAAC,CAAC;MAC7CK,KAAK,CAAC,kCAAkC,CAAC;IAC7C,CAAC,CAAC,OAAOC,GAAG,EAAE;MACVC,OAAO,CAACL,KAAK,CAAC,4BAA4B,EAAEI,GAAG,CAAC;MAChDH,QAAQ,CAAC,2BAA2B,CAAC;IACzC;EACJ,CAAC;EAED,oBACIV,OAAA;IAAAe,QAAA,gBACIf,OAAA;MAAAe,QAAA,GAAI,cAAY,EAACX,KAAK;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC5BnB,OAAA;MACIoB,WAAW,EAAC,0BAA0B;MACtCC,KAAK,EAAEd,QAAS;MAChBe,QAAQ,EAAGC,CAAC,IAAKf,WAAW,CAACe,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eACFnB,OAAA;MAAQyB,OAAO,EAAEd,oBAAqB;MAAAI,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC9DV,KAAK,iBAAIT,OAAA;MAAAe,QAAA,EAAMN;IAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3B,CAAC;AAEd,CAAC;AAACjB,EAAA,CA5BID,KAAK;EAAA,QACUJ,WAAW;AAAA;AAAA6B,EAAA,GAD1BzB,KAAK;AA8BX,eAAeA,KAAK;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}