{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Desktop\\\\mock-test\\\\mock-test-platform\\\\frontend\\\\src\\\\components\\\\Test.js\",\n  _s = $RefreshSig$();\n// src/components/Test.js\nimport React, { useEffect, useState } from 'react';\nimport { fetchQuestions, submitTest } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Test = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [userAnswers, setUserAnswers] = useState({});\n  const [timeLeft, setTimeLeft] = useState(900); // 15 minutes in seconds\n  const [score, setScore] = useState(null);\n  const userId = localStorage.getItem('userId'); // Ensure you store userId after login\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetchQuestions();\n      setQuestions(response.data);\n    };\n    fetchData();\n    const timer = setInterval(() => {\n      if (timeLeft > 0) {\n        setTimeLeft(prev => prev - 1);\n      } else {\n        clearInterval(timer);\n        handleSubmit();\n      }\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [timeLeft]);\n  const handleAnswerChange = (questionId, answer) => {\n    setUserAnswers(prev => ({\n      ...prev,\n      [questionId]: answer\n    }));\n  };\n  const handleSubmit = async () => {\n    const correctAnswers = questions.filter(q => q.correct_answer === userAnswers[q.id]).length;\n    setScore(correctAnswers);\n    await submitTest({\n      userId,\n      score: correctAnswers,\n      feedback: '' // You can handle feedback in a separate submission\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"test-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Time Left: \", Math.floor(timeLeft / 60), \":\", timeLeft % 60 < 10 ? `0${timeLeft % 60}` : timeLeft % 60]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), score === null ? questions.map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: question.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }, this), JSON.parse(question.options).map((option, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: question.id,\n          value: option,\n          onChange: () => handleAnswerChange(question.id, option)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 33\n        }, this), option]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 29\n      }, this))]\n    }, question.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Your Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this), score === null && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Submit Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 32\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(Test, \"GpKWwrkOrTqNDMQYTYj9yD8hL0I=\");\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useEffect","useState","fetchQuestions","submitTest","jsxDEV","_jsxDEV","Test","_s","questions","setQuestions","userAnswers","setUserAnswers","timeLeft","setTimeLeft","score","setScore","userId","localStorage","getItem","fetchData","response","data","timer","setInterval","prev","clearInterval","handleSubmit","handleAnswerChange","questionId","answer","correctAnswers","filter","q","correct_answer","id","length","feedback","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Math","floor","map","question","JSON","parse","options","option","index","type","name","value","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/HP/OneDrive/Desktop/mock-test/mock-test-platform/frontend/src/components/Test.js"],"sourcesContent":["// src/components/Test.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { fetchQuestions, submitTest } from '../api';\r\n\r\nconst Test = () => {\r\n    const [questions, setQuestions] = useState([]);\r\n    const [userAnswers, setUserAnswers] = useState({});\r\n    const [timeLeft, setTimeLeft] = useState(900); // 15 minutes in seconds\r\n    const [score, setScore] = useState(null);\r\n    const userId = localStorage.getItem('userId'); // Ensure you store userId after login\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const response = await fetchQuestions();\r\n            setQuestions(response.data);\r\n        };\r\n        fetchData();\r\n\r\n        const timer = setInterval(() => {\r\n            if (timeLeft > 0) {\r\n                setTimeLeft((prev) => prev - 1);\r\n            } else {\r\n                clearInterval(timer);\r\n                handleSubmit();\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(timer);\r\n    }, [timeLeft]);\r\n\r\n    const handleAnswerChange = (questionId, answer) => {\r\n        setUserAnswers((prev) => ({ ...prev, [questionId]: answer }));\r\n    };\r\n\r\n    const handleSubmit = async () => {\r\n        const correctAnswers = questions.filter(\r\n            (q) => q.correct_answer === userAnswers[q.id]\r\n        ).length;\r\n        \r\n        setScore(correctAnswers);\r\n        await submitTest({\r\n            userId,\r\n            score: correctAnswers,\r\n            feedback: '' // You can handle feedback in a separate submission\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"test-container\">\r\n            <h2>Test</h2>\r\n            <div>Time Left: {Math.floor(timeLeft / 60)}:{timeLeft % 60 < 10 ? `0${timeLeft % 60}` : timeLeft % 60}</div>\r\n            {score === null ? (\r\n                questions.map((question) => (\r\n                    <div key={question.id}>\r\n                        <h3>{question.question}</h3>\r\n                        {JSON.parse(question.options).map((option, index) => (\r\n                            <label key={index}>\r\n                                <input\r\n                                    type=\"radio\"\r\n                                    name={question.id}\r\n                                    value={option}\r\n                                    onChange={() => handleAnswerChange(question.id, option)}\r\n                                />\r\n                                {option}\r\n                            </label>\r\n                        ))}\r\n                    </div>\r\n                ))\r\n            ) : (\r\n                <h3>Your Score: {score}</h3>\r\n            )}\r\n            {score === null && <button onClick={handleSubmit}>Submit Test</button>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Test;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}