{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Desktop\\\\mock-test\\\\mock-test-platform\\\\frontend\\\\src\\\\components\\\\Score.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Score = () => {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  // Retrieve the score and other passed data from location state\n  const {\n    score,\n    userId,\n    userAnswers,\n    questions\n  } = location.state || {};\n\n  // Function to handle retaking the test\n  const handleRetakeTest = () => {\n    // Reset session storage or any relevant states for the test\n    sessionStorage.removeItem('testStarted');\n\n    // Redirect the user back to the Test component\n    navigate('/test');\n  };\n  let feedbackMessage = '';\n  if (score >= 7) {\n    // Assuming score is out of 10\n    feedbackMessage = 'Great job! Keep up the good work!';\n  } else {\n    feedbackMessage = \"Don't worry! Practice makes perfect!\";\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Test Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Your Score: \", score !== undefined ? score : 'N/A']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Correct Answers: \", score, \" out of \", questions.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: feedbackMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Thank you for taking the test!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"If you'd like, you can retake the test.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRetakeTest,\n        children: \"Retake Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(Score, \"ZmJpvzBBf8J7VCgSKqUUk0eHjAY=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Score;\nexport default Score;\nvar _c;\n$RefreshReg$(_c, \"Score\");","map":{"version":3,"names":["React","useLocation","useNavigate","jsxDEV","_jsxDEV","Score","_s","location","navigate","score","userId","userAnswers","questions","state","handleRetakeTest","sessionStorage","removeItem","feedbackMessage","children","fileName","_jsxFileName","lineNumber","columnNumber","undefined","length","onClick","_c","$RefreshReg$"],"sources":["C:/Users/HP/OneDrive/Desktop/mock-test/mock-test-platform/frontend/src/components/Score.js"],"sourcesContent":["import React from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\n\r\nconst Score = () => {\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n\r\n    // Retrieve the score and other passed data from location state\r\n    const { score, userId, userAnswers, questions } = location.state || {};\r\n\r\n    // Function to handle retaking the test\r\n    const handleRetakeTest = () => {\r\n        // Reset session storage or any relevant states for the test\r\n        sessionStorage.removeItem('testStarted');\r\n\r\n        // Redirect the user back to the Test component\r\n        navigate('/test');\r\n    };\r\n    let feedbackMessage = '';\r\n    if (score >= 7) { // Assuming score is out of 10\r\n        feedbackMessage = 'Great job! Keep up the good work!';\r\n    } else {\r\n        feedbackMessage = \"Don't worry! Practice makes perfect!\";\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Your Test Results</h2>\r\n            <h3>Your Score: {score !== undefined ? score : 'N/A'}</h3>\r\n            <p>Correct Answers: {score} out of {questions.length}</p>\r\n             <p>{feedbackMessage}</p>\r\n\r\n            <div>\r\n                <p>Thank you for taking the test!</p>\r\n                <p>If you'd like, you can retake the test.</p>\r\n\r\n                <button onClick={handleRetakeTest}>Retake Test</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default Score;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAMO,QAAQ,GAAGN,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAM;IAAEO,KAAK;IAAEC,MAAM;IAAEC,WAAW;IAAEC;EAAU,CAAC,GAAGL,QAAQ,CAACM,KAAK,IAAI,CAAC,CAAC;;EAEtE;EACA,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC3B;IACAC,cAAc,CAACC,UAAU,CAAC,aAAa,CAAC;;IAExC;IACAR,QAAQ,CAAC,OAAO,CAAC;EACrB,CAAC;EACD,IAAIS,eAAe,GAAG,EAAE;EACxB,IAAIR,KAAK,IAAI,CAAC,EAAE;IAAE;IACdQ,eAAe,GAAG,mCAAmC;EACzD,CAAC,MAAM;IACHA,eAAe,GAAG,sCAAsC;EAC5D;EAEA,oBACIb,OAAA;IAAAc,QAAA,gBACId,OAAA;MAAAc,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BlB,OAAA;MAAAc,QAAA,GAAI,cAAY,EAACT,KAAK,KAAKc,SAAS,GAAGd,KAAK,GAAG,KAAK;IAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC1DlB,OAAA;MAAAc,QAAA,GAAG,mBAAiB,EAACT,KAAK,EAAC,UAAQ,EAACG,SAAS,CAACY,MAAM;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxDlB,OAAA;MAAAc,QAAA,EAAID;IAAe;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEzBlB,OAAA;MAAAc,QAAA,gBACId,OAAA;QAAAc,QAAA,EAAG;MAA8B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACrClB,OAAA;QAAAc,QAAA,EAAG;MAAuC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAE9ClB,OAAA;QAAQqB,OAAO,EAAEX,gBAAiB;QAAAI,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAChB,EAAA,CArCID,KAAK;EAAA,QACUJ,WAAW,EACXC,WAAW;AAAA;AAAAwB,EAAA,GAF1BrB,KAAK;AAyCX,eAAeA,KAAK;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}