{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Desktop\\\\mock-test\\\\mock-test-platform\\\\frontend\\\\src\\\\components\\\\Test.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getQuestions } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Test = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const response = await getQuestions();\n        if (response && response.length > 0) {\n          setQuestions(response);\n        } else {\n          setError('No questions available');\n        }\n      } catch (err) {\n        console.error('Failed to fetch questions:', err);\n        setError('Failed to fetch questions'); // Set an error message\n      }\n    };\n    fetchQuestions();\n  }, []);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 16\n    }, this); // Display error if there is one\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: questions.length > 0 ? questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: question.questionText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading questions...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this) // Loading state\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(Test, \"QJdxPYIX7xIrJSLsm49R3IZwAK0=\");\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useEffect","useState","getQuestions","jsxDEV","_jsxDEV","Test","_s","questions","setQuestions","error","setError","fetchQuestions","response","length","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","question","index","questionText","_c","$RefreshReg$"],"sources":["C:/Users/HP/OneDrive/Desktop/mock-test/mock-test-platform/frontend/src/components/Test.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getQuestions } from '../api';\r\n\r\nconst Test = () => {\r\n    const [questions, setQuestions] = useState([]);\r\n    const [error, setError] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchQuestions = async () => {\r\n            try {\r\n                const response = await getQuestions();\r\n                if (response && response.length > 0) {\r\n                    setQuestions(response);\r\n                } else {\r\n                    setError('No questions available');\r\n                }\r\n            } catch (err) {\r\n                console.error('Failed to fetch questions:', err);\r\n                setError('Failed to fetch questions'); // Set an error message\r\n            }\r\n        };\r\n\r\n        fetchQuestions();\r\n    }, []);\r\n\r\n    if (error) {\r\n        return <div>{error}</div>; // Display error if there is one\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {questions.length > 0 ? (\r\n                questions.map((question, index) => (\r\n                    <div key={index}>\r\n                        <h4>{question.questionText}</h4>\r\n                    </div>\r\n                ))\r\n            ) : (\r\n                <div>Loading questions...</div> // Loading state\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Test;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,YAAY,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACZ,MAAMW,cAAc,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMV,YAAY,CAAC,CAAC;QACrC,IAAIU,QAAQ,IAAIA,QAAQ,CAACC,MAAM,GAAG,CAAC,EAAE;UACjCL,YAAY,CAACI,QAAQ,CAAC;QAC1B,CAAC,MAAM;UACHF,QAAQ,CAAC,wBAAwB,CAAC;QACtC;MACJ,CAAC,CAAC,OAAOI,GAAG,EAAE;QACVC,OAAO,CAACN,KAAK,CAAC,4BAA4B,EAAEK,GAAG,CAAC;QAChDJ,QAAQ,CAAC,2BAA2B,CAAC,CAAC,CAAC;MAC3C;IACJ,CAAC;IAEDC,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIF,KAAK,EAAE;IACP,oBAAOL,OAAA;MAAAY,QAAA,EAAMP;IAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,CAAC,CAAC;EAC/B;EAEA,oBACIhB,OAAA;IAAAY,QAAA,EACKT,SAAS,CAACM,MAAM,GAAG,CAAC,GACjBN,SAAS,CAACc,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBAC1BnB,OAAA;MAAAY,QAAA,eACIZ,OAAA;QAAAY,QAAA,EAAKM,QAAQ,CAACE;MAAY;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC,GAD1BG,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEV,CACR,CAAC,gBAEFhB,OAAA;MAAAY,QAAA,EAAK;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC;EACnC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACd,EAAA,CAvCID,IAAI;AAAAoB,EAAA,GAAJpB,IAAI;AAyCV,eAAeA,IAAI;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}