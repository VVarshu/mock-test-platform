{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Desktop\\\\mock-test\\\\mock-test-platform\\\\frontend\\\\src\\\\components\\\\Test.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getQuestions } from '../api'; // Import getQuestions function\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate for navigation\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Test = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [userAnswers, setUserAnswers] = useState({}); // State to track user answers\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [timer, setTimer] = useState(900); // 15 minutes in seconds\n  const navigate = useNavigate(); // Initialize useNavigate\n\n  // Assuming currentUser is available in the context or passed as a prop\n  const currentUser = {\n    id: 1\n  }; // Replace with actual user ID retrieval logic\n\n  // Score submission function\n  const handleSubmitScore = async () => {\n    const totalQuestions = questions.length;\n    const correctAnswers = questions.filter(question => question.correctAnswer === userAnswers[question.id]).length;\n    const calculatedScore = Math.round(correctAnswers / totalQuestions * 100);\n\n    // Assuming currentUser is an object that has the user ID\n    const userId = currentUser.id; // This should be a number\n\n    try {\n      const response = await fetch('/api/submitScore', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId: userId,\n          // Ensure this is a number\n          score: calculatedScore\n        })\n      });\n      const result = await response.json();\n      console.log(result);\n      navigate('/results'); // Navigate to results page after submission\n    } catch (error) {\n      console.error('Error submitting score:', error);\n    }\n  };\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const response = await getQuestions();\n        if (response && response.questions && response.questions.length > 0) {\n          setQuestions(response.questions);\n        } else {\n          setError('No questions available');\n        }\n      } catch (err) {\n        console.error('Failed to fetch questions:', err);\n        setError('Failed to fetch questions');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchQuestions();\n  }, []);\n  useEffect(() => {\n    // Timer functionality\n    const countdown = setInterval(() => {\n      setTimer(prevTimer => {\n        if (prevTimer <= 1) {\n          clearInterval(countdown);\n          handleSubmitScore(); // Submit the test when time runs out\n          return 0;\n        }\n        return prevTimer - 1;\n      });\n    }, 1000);\n    return () => clearInterval(countdown);\n  }, []);\n  const handleAnswerChange = (questionId, answer) => {\n    setUserAnswers(prevAnswers => ({\n      ...prevAnswers,\n      [questionId]: answer\n    }));\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading questions...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Time Left: \", Math.floor(timer / 60), \":\", String(timer % 60).padStart(2, '0')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: question.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: `question${index}`,\n          value: \"1\",\n          onChange: () => handleAnswerChange(question.id, '1')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }, this), \" \", question.option1, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 46\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: `question${index}`,\n          value: \"2\",\n          onChange: () => handleAnswerChange(question.id, '2')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }, this), \" \", question.option2, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 46\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: `question${index}`,\n          value: \"3\",\n          onChange: () => handleAnswerChange(question.id, '3')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }, this), \" \", question.option3, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 46\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: `question${index}`,\n          value: \"4\",\n          onChange: () => handleAnswerChange(question.id, '4')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }, this), \" \", question.option4, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 46\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this)]\n    }, question.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmitScore,\n      children: \"Submit Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n};\n_s(Test, \"a2wrwEHqzPg1XKNlZAsSBVjuXZs=\", false, function () {\n  return [useNavigate];\n});\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useEffect","useState","getQuestions","useNavigate","jsxDEV","_jsxDEV","Test","_s","questions","setQuestions","userAnswers","setUserAnswers","error","setError","loading","setLoading","timer","setTimer","navigate","currentUser","id","handleSubmitScore","totalQuestions","length","correctAnswers","filter","question","correctAnswer","calculatedScore","Math","round","userId","response","fetch","method","headers","body","JSON","stringify","score","result","json","console","log","fetchQuestions","err","countdown","setInterval","prevTimer","clearInterval","handleAnswerChange","questionId","answer","prevAnswers","children","fileName","_jsxFileName","lineNumber","columnNumber","floor","String","padStart","map","index","text","type","name","value","onChange","option1","option2","option3","option4","onClick","_c","$RefreshReg$"],"sources":["C:/Users/HP/OneDrive/Desktop/mock-test/mock-test-platform/frontend/src/components/Test.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getQuestions } from '../api'; // Import getQuestions function\r\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate for navigation\r\n\r\nconst Test = () => {\r\n    const [questions, setQuestions] = useState([]);\r\n    const [userAnswers, setUserAnswers] = useState({}); // State to track user answers\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(true);\r\n    const [timer, setTimer] = useState(900); // 15 minutes in seconds\r\n    const navigate = useNavigate(); // Initialize useNavigate\r\n\r\n    // Assuming currentUser is available in the context or passed as a prop\r\n    const currentUser = { id: 1 }; // Replace with actual user ID retrieval logic\r\n\r\n    // Score submission function\r\n    const handleSubmitScore = async () => {\r\n        const totalQuestions = questions.length;\r\n        const correctAnswers = questions.filter((question) => \r\n            question.correctAnswer === userAnswers[question.id]\r\n        ).length; \r\n        const calculatedScore = Math.round((correctAnswers / totalQuestions) * 100); \r\n\r\n        // Assuming currentUser is an object that has the user ID\r\n        const userId = currentUser.id; // This should be a number\r\n\r\n        try {\r\n            const response = await fetch('/api/submitScore', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    userId: userId, // Ensure this is a number\r\n                    score: calculatedScore,\r\n                }),\r\n            });\r\n\r\n            const result = await response.json();\r\n            console.log(result);\r\n            navigate('/results'); // Navigate to results page after submission\r\n        } catch (error) {\r\n            console.error('Error submitting score:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchQuestions = async () => {\r\n            try {\r\n                const response = await getQuestions();\r\n                if (response && response.questions && response.questions.length > 0) {\r\n                    setQuestions(response.questions);\r\n                } else {\r\n                    setError('No questions available');\r\n                }\r\n            } catch (err) {\r\n                console.error('Failed to fetch questions:', err);\r\n                setError('Failed to fetch questions');\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchQuestions();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // Timer functionality\r\n        const countdown = setInterval(() => {\r\n            setTimer((prevTimer) => {\r\n                if (prevTimer <= 1) {\r\n                    clearInterval(countdown);\r\n                    handleSubmitScore(); // Submit the test when time runs out\r\n                    return 0;\r\n                }\r\n                return prevTimer - 1;\r\n            });\r\n        }, 1000);\r\n\r\n        return () => clearInterval(countdown);\r\n    }, []);\r\n\r\n    const handleAnswerChange = (questionId, answer) => {\r\n        setUserAnswers((prevAnswers) => ({\r\n            ...prevAnswers,\r\n            [questionId]: answer,\r\n        }));\r\n    };\r\n\r\n    if (loading) {\r\n        return <div>Loading questions...</div>;\r\n    }\r\n\r\n    if (error) {\r\n        return <div>{error}</div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Time Left: {Math.floor(timer / 60)}:{String(timer % 60).padStart(2, '0')}</h2>\r\n            {questions.map((question, index) => (\r\n                <div key={question.id}>\r\n                    <h4>{question.text}</h4>\r\n                    <div>\r\n                        <input \r\n                            type=\"radio\" \r\n                            name={`question${index}`} \r\n                            value=\"1\" \r\n                            onChange={() => handleAnswerChange(question.id, '1')} \r\n                        /> {question.option1}<br />\r\n                        <input \r\n                            type=\"radio\" \r\n                            name={`question${index}`} \r\n                            value=\"2\" \r\n                            onChange={() => handleAnswerChange(question.id, '2')} \r\n                        /> {question.option2}<br />\r\n                        <input \r\n                            type=\"radio\" \r\n                            name={`question${index}`} \r\n                            value=\"3\" \r\n                            onChange={() => handleAnswerChange(question.id, '3')} \r\n                        /> {question.option3}<br />\r\n                        <input \r\n                            type=\"radio\" \r\n                            name={`question${index}`} \r\n                            value=\"4\" \r\n                            onChange={() => handleAnswerChange(question.id, '4')} \r\n                        /> {question.option4}<br />\r\n                    </div>\r\n                </div>\r\n            ))}\r\n            <button onClick={handleSubmitScore}>Submit Test</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Test;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}