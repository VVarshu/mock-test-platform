{"ast":null,"code":"import React from'react';import{useLocation,useNavigate}from'react-router-dom';import'./score.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Score=()=>{const location=useLocation();const navigate=useNavigate();// Retrieve the score and other passed data from location state\nconst{score,questions}=location.state||{};// Function to handle retaking the test\nconst handleRetakeTest=()=>{// Reset session storage or any relevant states for the test\nsessionStorage.removeItem('testStarted');// Redirect the user back to the Test component\nnavigate('/test');};let feedbackMessage='';if(score>=7){// Assuming score is out of 10\nfeedbackMessage='Great job! Keep up the good work!';}else{feedbackMessage=\"Don't worry! Practice makes perfect!\";}return/*#__PURE__*/_jsxs(\"div\",{className:\"score-page\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Your Test Results\"}),/*#__PURE__*/_jsxs(\"h3\",{children:[\"Your Score: \",score!==undefined?score:'N/A']}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Correct Answers: \",score,\" out of \",questions.length]}),/*#__PURE__*/_jsx(\"p\",{children:feedbackMessage}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:\"Thank you for taking the test!\"}),/*#__PURE__*/_jsx(\"p\",{children:\"If you'd like, you can retake the test.\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleRetakeTest,children:\"Retake Test\"})]})]});};export default Score;","map":{"version":3,"names":["React","useLocation","useNavigate","jsx","_jsx","jsxs","_jsxs","Score","location","navigate","score","questions","state","handleRetakeTest","sessionStorage","removeItem","feedbackMessage","className","children","undefined","length","onClick"],"sources":["C:/Users/HP/OneDrive/Desktop/mock-test/mock-test-platform/frontend/src/components/Score.js"],"sourcesContent":["import React from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport './score.css';\r\n\r\nconst Score = () => {\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n\r\n    // Retrieve the score and other passed data from location state\r\n    const { score, questions } = location.state || {};\r\n\r\n    // Function to handle retaking the test\r\n    const handleRetakeTest = () => {\r\n        // Reset session storage or any relevant states for the test\r\n        sessionStorage.removeItem('testStarted');\r\n\r\n        // Redirect the user back to the Test component\r\n        navigate('/test');\r\n    };\r\n    let feedbackMessage = '';\r\n    if (score >= 7) { // Assuming score is out of 10\r\n        feedbackMessage = 'Great job! Keep up the good work!';\r\n    } else {\r\n        feedbackMessage = \"Don't worry! Practice makes perfect!\";\r\n    }\r\n\r\n    return (\r\n        <div className='score-page'> \r\n            <h2>Your Test Results</h2>\r\n            <h3>Your Score: {score !== undefined ? score : 'N/A'}</h3>\r\n            <p>Correct Answers: {score} out of {questions.length}</p>\r\n             <p>{feedbackMessage}</p>\r\n\r\n            <div>\r\n                <p>Thank you for taking the test!</p>\r\n                <p>If you'd like, you can retake the test.</p>\r\n\r\n                <button onClick={handleRetakeTest}>Retake Test</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default Score;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,WAAW,CAAEC,WAAW,KAAQ,kBAAkB,CAC3D,MAAO,aAAa,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAErB,KAAM,CAAAC,KAAK,CAAGA,CAAA,GAAM,CAChB,KAAM,CAAAC,QAAQ,CAAGP,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAAQ,QAAQ,CAAGP,WAAW,CAAC,CAAC,CAE9B;AACA,KAAM,CAAEQ,KAAK,CAAEC,SAAU,CAAC,CAAGH,QAAQ,CAACI,KAAK,EAAI,CAAC,CAAC,CAEjD;AACA,KAAM,CAAAC,gBAAgB,CAAGA,CAAA,GAAM,CAC3B;AACAC,cAAc,CAACC,UAAU,CAAC,aAAa,CAAC,CAExC;AACAN,QAAQ,CAAC,OAAO,CAAC,CACrB,CAAC,CACD,GAAI,CAAAO,eAAe,CAAG,EAAE,CACxB,GAAIN,KAAK,EAAI,CAAC,CAAE,CAAE;AACdM,eAAe,CAAG,mCAAmC,CACzD,CAAC,IAAM,CACHA,eAAe,CAAG,sCAAsC,CAC5D,CAEA,mBACIV,KAAA,QAAKW,SAAS,CAAC,YAAY,CAAAC,QAAA,eACvBd,IAAA,OAAAc,QAAA,CAAI,mBAAiB,CAAI,CAAC,cAC1BZ,KAAA,OAAAY,QAAA,EAAI,cAAY,CAACR,KAAK,GAAKS,SAAS,CAAGT,KAAK,CAAG,KAAK,EAAK,CAAC,cAC1DJ,KAAA,MAAAY,QAAA,EAAG,mBAAiB,CAACR,KAAK,CAAC,UAAQ,CAACC,SAAS,CAACS,MAAM,EAAI,CAAC,cACxDhB,IAAA,MAAAc,QAAA,CAAIF,eAAe,CAAI,CAAC,cAEzBV,KAAA,QAAAY,QAAA,eACId,IAAA,MAAAc,QAAA,CAAG,gCAA8B,CAAG,CAAC,cACrCd,IAAA,MAAAc,QAAA,CAAG,yCAAuC,CAAG,CAAC,cAE9Cd,IAAA,WAAQiB,OAAO,CAAER,gBAAiB,CAAAK,QAAA,CAAC,aAAW,CAAQ,CAAC,EACtD,CAAC,EACL,CAAC,CAEd,CAAC,CAID,cAAe,CAAAX,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}