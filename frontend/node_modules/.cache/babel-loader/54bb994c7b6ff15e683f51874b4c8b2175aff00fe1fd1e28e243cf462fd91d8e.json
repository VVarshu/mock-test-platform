{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Desktop\\\\mock-test\\\\mock-test-platform\\\\frontend\\\\src\\\\components\\\\Test.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { getQuestions, submitTest } from '../api'; // Import the submitTest function\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Test = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [userAnswers, setUserAnswers] = useState({}); // State to track user answers\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [timer, setTimer] = useState(900); // 15 minutes in seconds\n  const [score, setScore] = useState(null); // State to store the score\n  const [feedback, setFeedback] = useState(''); // State to store feedback\n  const [feedbackSubmitted, setFeedbackSubmitted] = useState(false); // State to track if feedback has been submitted\n\n  // Replace 'USER_ID' with actual user ID retrieval logic\n  const currentUser = {\n    id: 1\n  }; // Placeholder for actual user ID\n\n  // Moved handleSubmit above the useEffect hooks\n  const handleSubmit = useCallback(async () => {\n    const totalQuestions = questions.length;\n    const correctAnswers = questions.filter(question => question.correctAnswer === userAnswers[question.id]).length; // Assuming each question has a 'correctAnswer' property\n\n    const calculatedScore = Math.round(correctAnswers / totalQuestions * 100); // Calculate score\n    setScore(calculatedScore); // Set the score to state\n\n    try {\n      // Submit score and feedback\n      await submitTest({\n        userId: currentUser.id,\n        // Use the actual user ID here\n        score: calculatedScore,\n        feedback\n      });\n      setFeedbackSubmitted(true); // Mark feedback as submitted\n      alert('Test submitted successfully!');\n    } catch (err) {\n      console.error('Failed to submit test:', err);\n      setError('Failed to submit test');\n    }\n  }, [feedback, questions, userAnswers, currentUser.id]); // Add dependencies\n\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const response = await getQuestions();\n        if (response && response.questions && response.questions.length > 0) {\n          setQuestions(response.questions);\n        } else {\n          setError('No questions available');\n        }\n      } catch (err) {\n        console.error('Failed to fetch questions:', err);\n        setError('Failed to fetch questions');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchQuestions();\n  }, []);\n  useEffect(() => {\n    // Timer functionality\n    const countdown = setInterval(() => {\n      setTimer(prevTimer => {\n        if (prevTimer <= 1) {\n          clearInterval(countdown);\n          handleSubmit(); // Submit the test when time runs out\n          return 0;\n        }\n        return prevTimer - 1;\n      });\n    }, 1000);\n    return () => clearInterval(countdown);\n  }, [handleSubmit]); // Added handleSubmit to dependencies\n\n  const handleAnswerChange = (questionId, answer) => {\n    setUserAnswers(prevAnswers => ({\n      ...prevAnswers,\n      [questionId]: answer\n    }));\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading questions...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Time Left: \", Math.floor(timer / 60), \":\", String(timer % 60).padStart(2, '0')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: question.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: `question${index}`,\n          value: \"1\",\n          onChange: () => handleAnswerChange(question.id, '1')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }, this), \" \", question.option1, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 46\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: `question${index}`,\n          value: \"2\",\n          onChange: () => handleAnswerChange(question.id, '2')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this), \" \", question.option2, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 46\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: `question${index}`,\n          value: \"3\",\n          onChange: () => handleAnswerChange(question.id, '3')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this), \" \", question.option3, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 46\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: `question${index}`,\n          value: \"4\",\n          onChange: () => handleAnswerChange(question.id, '4')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }, this), \" \", question.option4, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 46\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this)]\n    }, question.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Submit Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), score !== null && feedbackSubmitted && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Your Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Provide your feedback...\",\n        value: feedback,\n        onChange: e => setFeedback(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Submit Feedback\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n};\n_s(Test, \"gEf84Bs2iFwZZdwAW7RHDW8WE5o=\");\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","getQuestions","submitTest","jsxDEV","_jsxDEV","Test","_s","questions","setQuestions","userAnswers","setUserAnswers","error","setError","loading","setLoading","timer","setTimer","score","setScore","feedback","setFeedback","feedbackSubmitted","setFeedbackSubmitted","currentUser","id","handleSubmit","totalQuestions","length","correctAnswers","filter","question","correctAnswer","calculatedScore","Math","round","userId","alert","err","console","fetchQuestions","response","countdown","setInterval","prevTimer","clearInterval","handleAnswerChange","questionId","answer","prevAnswers","children","fileName","_jsxFileName","lineNumber","columnNumber","floor","String","padStart","map","index","text","type","name","value","onChange","option1","option2","option3","option4","onClick","placeholder","e","target","_c","$RefreshReg$"],"sources":["C:/Users/HP/OneDrive/Desktop/mock-test/mock-test-platform/frontend/src/components/Test.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\r\nimport { getQuestions, submitTest } from '../api'; // Import the submitTest function\r\n\r\nconst Test = () => {\r\n    const [questions, setQuestions] = useState([]);\r\n    const [userAnswers, setUserAnswers] = useState({}); // State to track user answers\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(true);\r\n    const [timer, setTimer] = useState(900); // 15 minutes in seconds\r\n    const [score, setScore] = useState(null); // State to store the score\r\n    const [feedback, setFeedback] = useState(''); // State to store feedback\r\n    const [feedbackSubmitted, setFeedbackSubmitted] = useState(false); // State to track if feedback has been submitted\r\n\r\n    // Replace 'USER_ID' with actual user ID retrieval logic\r\n    const currentUser = { id: 1 }; // Placeholder for actual user ID\r\n\r\n    // Moved handleSubmit above the useEffect hooks\r\n    const handleSubmit = useCallback(async () => {\r\n        const totalQuestions = questions.length;\r\n        const correctAnswers = questions.filter((question) => \r\n            question.correctAnswer === userAnswers[question.id]\r\n        ).length; // Assuming each question has a 'correctAnswer' property\r\n\r\n        const calculatedScore = Math.round((correctAnswers / totalQuestions) * 100); // Calculate score\r\n        setScore(calculatedScore); // Set the score to state\r\n\r\n        try {\r\n            // Submit score and feedback\r\n            await submitTest({ \r\n                userId: currentUser.id, // Use the actual user ID here\r\n                score: calculatedScore, \r\n                feedback \r\n            }); \r\n            setFeedbackSubmitted(true); // Mark feedback as submitted\r\n            alert('Test submitted successfully!');\r\n        } catch (err) {\r\n            console.error('Failed to submit test:', err);\r\n            setError('Failed to submit test');\r\n        }\r\n    }, [feedback, questions, userAnswers, currentUser.id]); // Add dependencies\r\n\r\n    useEffect(() => {\r\n        const fetchQuestions = async () => {\r\n            try {\r\n                const response = await getQuestions();\r\n                if (response && response.questions && response.questions.length > 0) {\r\n                    setQuestions(response.questions);\r\n                } else {\r\n                    setError('No questions available');\r\n                }\r\n            } catch (err) {\r\n                console.error('Failed to fetch questions:', err);\r\n                setError('Failed to fetch questions');\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchQuestions();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // Timer functionality\r\n        const countdown = setInterval(() => {\r\n            setTimer((prevTimer) => {\r\n                if (prevTimer <= 1) {\r\n                    clearInterval(countdown);\r\n                    handleSubmit(); // Submit the test when time runs out\r\n                    return 0;\r\n                }\r\n                return prevTimer - 1;\r\n            });\r\n        }, 1000);\r\n\r\n        return () => clearInterval(countdown);\r\n    }, [handleSubmit]); // Added handleSubmit to dependencies\r\n\r\n    const handleAnswerChange = (questionId, answer) => {\r\n        setUserAnswers((prevAnswers) => ({\r\n            ...prevAnswers,\r\n            [questionId]: answer,\r\n        }));\r\n    };\r\n\r\n    if (loading) {\r\n        return <div>Loading questions...</div>;\r\n    }\r\n\r\n    if (error) {\r\n        return <div>{error}</div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Time Left: {Math.floor(timer / 60)}:{String(timer % 60).padStart(2, '0')}</h2>\r\n            {questions.map((question, index) => (\r\n                <div key={question.id}>\r\n                    <h4>{question.text}</h4>\r\n                    <div>\r\n                        <input \r\n                            type=\"radio\" \r\n                            name={`question${index}`} \r\n                            value=\"1\" \r\n                            onChange={() => handleAnswerChange(question.id, '1')} \r\n                        /> {question.option1}<br />\r\n                        <input \r\n                            type=\"radio\" \r\n                            name={`question${index}`} \r\n                            value=\"2\" \r\n                            onChange={() => handleAnswerChange(question.id, '2')} \r\n                        /> {question.option2}<br />\r\n                        <input \r\n                            type=\"radio\" \r\n                            name={`question${index}`} \r\n                            value=\"3\" \r\n                            onChange={() => handleAnswerChange(question.id, '3')} \r\n                        /> {question.option3}<br />\r\n                        <input \r\n                            type=\"radio\" \r\n                            name={`question${index}`} \r\n                            value=\"4\" \r\n                            onChange={() => handleAnswerChange(question.id, '4')} \r\n                        /> {question.option4}<br />\r\n                    </div>\r\n                </div>\r\n            ))}\r\n            <button onClick={handleSubmit}>Submit Test</button>\r\n            {score !== null && feedbackSubmitted && (\r\n                <div>\r\n                    <h3>Your Score: {score}</h3>\r\n                    <textarea \r\n                        placeholder=\"Provide your feedback...\" \r\n                        value={feedback} \r\n                        onChange={(e) => setFeedback(e.target.value)} \r\n                    />\r\n                    <button onClick={handleSubmit}>Submit Feedback</button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Test;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}