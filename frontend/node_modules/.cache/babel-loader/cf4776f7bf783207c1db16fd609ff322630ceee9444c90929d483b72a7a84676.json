{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Desktop\\\\mock-test\\\\mock-test-platform\\\\frontend\\\\src\\\\components\\\\Score.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Score = () => {\n  _s();\n  const location = useLocation();\n  const {\n    score,\n    questions\n  } = location.state || {\n    score: 0,\n    user_id: null,\n    questions: []\n  };\n\n  // Prepare feedback message\n  let feedbackMessage = '';\n  if (score >= 7) {\n    // Assuming score is out of 10\n    feedbackMessage = 'Great job! Keep up the good work!';\n  } else {\n    feedbackMessage = \"Don't worry! Practice makes perfect!\";\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Your Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Correct Answers: \", score, \" out of \", questions.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: feedbackMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), \"if (testEnded) \", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Your test has ended.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), score !== null && /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Your Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 36\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRetakeTest,\n        children: \"Retake Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n_s(Score, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = Score;\nexport default Score;\nvar _c;\n$RefreshReg$(_c, \"Score\");","map":{"version":3,"names":["React","useLocation","jsxDEV","_jsxDEV","Score","_s","location","score","questions","state","user_id","feedbackMessage","children","fileName","_jsxFileName","lineNumber","columnNumber","length","onClick","handleRetakeTest","_c","$RefreshReg$"],"sources":["C:/Users/HP/OneDrive/Desktop/mock-test/mock-test-platform/frontend/src/components/Score.js"],"sourcesContent":["import React from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst Score = () => {\r\n    const location = useLocation();\r\n    const { score, questions } = location.state || { score: 0, user_id: null, questions: [] };\r\n\r\n  \r\n\r\n    // Prepare feedback message\r\n    let feedbackMessage = '';\r\n    if (score >= 7) { // Assuming score is out of 10\r\n        feedbackMessage = 'Great job! Keep up the good work!';\r\n    } else {\r\n        feedbackMessage = \"Don't worry! Practice makes perfect!\";\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Your Score: {score}</h2>\r\n            <p>Correct Answers: {score} out of {questions.length}</p>\r\n            <p>{feedbackMessage}</p>\r\n            if (testEnded) {\r\n            <div>\r\n                <h3>Your test has ended.</h3>\r\n                {score !== null && <h3>Your Score: {score}</h3>}\r\n                <button onClick={handleRetakeTest}>Retake Test</button>\r\n            </div>\r\n            }\r\n        \r\n    \r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Score;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEM,KAAK;IAAEC;EAAU,CAAC,GAAGF,QAAQ,CAACG,KAAK,IAAI;IAAEF,KAAK,EAAE,CAAC;IAAEG,OAAO,EAAE,IAAI;IAAEF,SAAS,EAAE;EAAG,CAAC;;EAIzF;EACA,IAAIG,eAAe,GAAG,EAAE;EACxB,IAAIJ,KAAK,IAAI,CAAC,EAAE;IAAE;IACdI,eAAe,GAAG,mCAAmC;EACzD,CAAC,MAAM;IACHA,eAAe,GAAG,sCAAsC;EAC5D;EAEA,oBACIR,OAAA;IAAAS,QAAA,gBACIT,OAAA;MAAAS,QAAA,GAAI,cAAY,EAACL,KAAK;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC5Bb,OAAA;MAAAS,QAAA,GAAG,mBAAiB,EAACL,KAAK,EAAC,UAAQ,EAACC,SAAS,CAACS,MAAM;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzDb,OAAA;MAAAS,QAAA,EAAID;IAAe;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,mBACT,eACfb,OAAA;MAAAS,QAAA,gBACIT,OAAA;QAAAS,QAAA,EAAI;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC5BT,KAAK,KAAK,IAAI,iBAAIJ,OAAA;QAAAS,QAAA,GAAI,cAAY,EAACL,KAAK;MAAA;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC/Cb,OAAA;QAAQe,OAAO,EAAEC,gBAAiB;QAAAP,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAKL,CAAC;AAEd,CAAC;AAACX,EAAA,CA/BID,KAAK;EAAA,QACUH,WAAW;AAAA;AAAAmB,EAAA,GAD1BhB,KAAK;AAiCX,eAAeA,KAAK;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}